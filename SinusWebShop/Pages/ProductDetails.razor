@page "/product/{Id:int}"
@inject HttpClient httpClient
@using SinusWebShop.Models
@using System.Net.Http.Json
@using SinusWebShop.Managers

@if (Product != null)
{
    <div class="product-details">
        <h1>@Product.Title</h1>
        <img src="@Product.Thumbnail" alt="@Product.Title" />
        <p>Description: @Product.Description</p>
        <p>Price: @Product.Price</p>
        <p>Stock: @Product.Stock</p>
        <p>Brand: @Product.Brand</p>
        <p>Category: @Product.Category</p>
        <h2>Images:</h2>
        @foreach (var image in Product.Images)
        {
            <img src="@image" alt="Product Image" />
        }
    </div>

    <button @onclick="AddToCart">Add to Cart</button>
    <div class="toast-container">
        <div class="toast @(toastVisible ? "show" : "")">
            @if (toastVisible)
            {
                <p>Product added to cart!</p>
            }
        </div>
    </div>
}
else
{
    <p>Product not found.</p>
}

@code {
    [Parameter]
    public int Id { get; set; }

    public Product? Product { get; set; }
    public string ErrorMessage { get; set; }
    public bool toastVisible { get; set; }

    [Inject]
    public HttpClient HttpClient { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Product = await HttpClient.GetFromJsonAsync<Product>($"products/{Id}");
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }

    private void AddToCart()
    {
        CartManager.AddToCart(Product);
    }
    private async Task AddToCart(MouseEventArgs e)
    {
        CartManager.AddToCart(Product);
        toastVisible = true;
        await Task.Delay(2000); // Display the toast for 2 seconds
        toastVisible = false;
    }

}

<style>
    .toast-container {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 9999;
    }

    .toast {
        background-color: #4CAF50;
        color: white;
        text-align: center;
        padding: 16px;
        border-radius: 8px;
    }

    .show {
        animation: fadeOut 2s forwards;
    }

    .keyframes fadeOut {
        0% {
            opacity: 1;
        }
        100% {
            opacity: 0;
            display: none;
        }
    }
</style>

